<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crt.openapi.modules.apiinterface.domain.dao.ApiUsersMapper" >
  <resultMap id="BaseResultMap" type="com.crt.openapi.modules.apiinterface.domain.entity.ApiUsers" >
    <id column="id" property="id" jdbcType="DECIMAL" />
    <result column="user_no" property="userNo" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="link_phone" property="linkPhone" jdbcType="VARCHAR" />
    <result column="email_address" property="emailAddress" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="is_admin" property="isAdmin" jdbcType="VARCHAR" />
    <result column="is_publish" property="isPublish" jdbcType="VARCHAR" />
    <result column="is_subscribe" property="isSubscribe" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="creater_date" property="createrDate" jdbcType="VARCHAR" />
    <result column="update" property="update" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_no, user_name, password, link_phone, email_address, sort, remark, is_admin, 
    is_publish, is_subscribe, del_flag, creater, creater_date, update, update_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.crt.openapi.modules.apiinterface.domain.entity.ApiUsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from api_users
    where id = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from api_users
    where id = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.crt.openapi.modules.apiinterface.domain.entity.ApiUsersExample" >
    delete from api_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crt.openapi.modules.apiinterface.domain.entity.ApiUsers" >
    insert into api_users (id, user_no, user_name, 
      password, link_phone, email_address, 
      sort, remark, is_admin, 
      is_publish, is_subscribe, del_flag, 
      creater, creater_date, update, 
      update_date)
    values (#{id,jdbcType=DECIMAL}, #{userNo,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{linkPhone,jdbcType=VARCHAR}, #{emailAddress,jdbcType=VARCHAR}, 
      #{sort,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{isAdmin,jdbcType=VARCHAR}, 
      #{isPublish,jdbcType=VARCHAR}, #{isSubscribe,jdbcType=VARCHAR}, #{delFlag,jdbcType=VARCHAR}, 
      #{creater,jdbcType=VARCHAR}, #{createrDate,jdbcType=VARCHAR}, #{update,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crt.openapi.modules.apiinterface.domain.entity.ApiUsers" >
    insert into api_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userNo != null" >
        user_no,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="linkPhone != null" >
        link_phone,
      </if>
      <if test="emailAddress != null" >
        email_address,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="isAdmin != null" >
        is_admin,
      </if>
      <if test="isPublish != null" >
        is_publish,
      </if>
      <if test="isSubscribe != null" >
        is_subscribe,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createrDate != null" >
        creater_date,
      </if>
      <if test="update != null" >
        update,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="userNo != null" >
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="linkPhone != null" >
        #{linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null" >
        #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=VARCHAR},
      </if>
      <if test="isPublish != null" >
        #{isPublish,jdbcType=VARCHAR},
      </if>
      <if test="isSubscribe != null" >
        #{isSubscribe,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createrDate != null" >
        #{createrDate,jdbcType=VARCHAR},
      </if>
      <if test="update != null" >
        #{update,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crt.openapi.modules.apiinterface.domain.entity.ApiUsersExample" resultType="java.lang.Integer" >
    select count(*) from api_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update api_users
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.userNo != null" >
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.linkPhone != null" >
        link_phone = #{record.linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.emailAddress != null" >
        email_address = #{record.emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isAdmin != null" >
        is_admin = #{record.isAdmin,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublish != null" >
        is_publish = #{record.isPublish,jdbcType=VARCHAR},
      </if>
      <if test="record.isSubscribe != null" >
        is_subscribe = #{record.isSubscribe,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createrDate != null" >
        creater_date = #{record.createrDate,jdbcType=VARCHAR},
      </if>
      <if test="record.update != null" >
        update = #{record.update,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api_users
    set id = #{record.id,jdbcType=DECIMAL},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      link_phone = #{record.linkPhone,jdbcType=VARCHAR},
      email_address = #{record.emailAddress,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_admin = #{record.isAdmin,jdbcType=VARCHAR},
      is_publish = #{record.isPublish,jdbcType=VARCHAR},
      is_subscribe = #{record.isSubscribe,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      creater_date = #{record.createrDate,jdbcType=VARCHAR},
      update = #{record.update,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crt.openapi.modules.apiinterface.domain.entity.ApiUsers" >
    update api_users
    <set >
      <if test="userNo != null" >
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="linkPhone != null" >
        link_phone = #{linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null" >
        email_address = #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        is_admin = #{isAdmin,jdbcType=VARCHAR},
      </if>
      <if test="isPublish != null" >
        is_publish = #{isPublish,jdbcType=VARCHAR},
      </if>
      <if test="isSubscribe != null" >
        is_subscribe = #{isSubscribe,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createrDate != null" >
        creater_date = #{createrDate,jdbcType=VARCHAR},
      </if>
      <if test="update != null" >
        update = #{update,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crt.openapi.modules.apiinterface.domain.entity.ApiUsers" >
    update api_users
    set user_no = #{userNo,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      link_phone = #{linkPhone,jdbcType=VARCHAR},
      email_address = #{emailAddress,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_admin = #{isAdmin,jdbcType=VARCHAR},
      is_publish = #{isPublish,jdbcType=VARCHAR},
      is_subscribe = #{isSubscribe,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      creater_date = #{createrDate,jdbcType=VARCHAR},
      update = #{update,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=DECIMAL}
  </update>
</mapper>